{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","radius","setRadius","height","setHeight","density","setDensity","length","setLength","volume","setVolume","quality","setQuality","cal","r","parseFloat","h","l","d","isNaN","total_v","calArea","total_quality","degree","Math","acos","tan","className","value","onChange","event","target","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMA2EeA,MAxEf,WAEE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAA4BR,mBAAS,IAArC,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAA6BV,mBAAS,IAAtC,mBAAOW,EAAP,KAAeC,EAAf,KAqBMC,EAAM,WACV,IAAMC,EAAIC,WAAWd,EAAO,IAAI,IAC1Be,EAAID,WAAWZ,EAAO,IAAI,IAC1Bc,EAAIF,WAAWR,EAAO,IAAI,IAC1BW,EAAIH,WAAWV,EAAQ,IAC7B,IAAKc,MAAML,KAAOK,MAAMH,KAAOG,MAAMF,KAAOE,MAAMD,IAAMJ,EAAI,GAAKE,EAAI,GAAKC,EAAI,GAAKC,EAAI,EAAG,CACxF,IACME,EADOC,EAAQP,EAAEE,GACAC,EACjBK,EAAgBF,EAAUF,EAChCR,EAAUU,GACVR,EAAWU,KAITD,EAAU,SAACP,EAAGE,GAClB,IAAMO,EAASC,KAAKC,MAAMX,EAAEE,GAAGF,GAI/B,OAHkBA,EAAIA,EAAIS,EAChBC,KAAKE,IAAIH,IAAWT,EAAIE,IACRF,EAAIE,IAKhC,OACE,qBAAKW,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,8DAAY,0BAAUC,MAAO3B,EAAQ4B,SA7ChB,SAACC,GAC1B5B,EAAU4B,EAAMC,OAAOH,OACvBf,OA2CI,QACA,uBACA,8DAAY,0BAAUe,MAAOrB,EAAQsB,SArChB,SAACC,GACzBtB,EAAUsB,EAAMC,OAAOH,OACvBf,OAmCG,QACA,uBACA,8DAAY,0BAAUe,MAAOzB,EAAQ0B,SA5ChB,SAACC,GACzB1B,EAAU0B,EAAMC,OAAOH,OACvBf,OA0CG,QACA,uBACA,wDAAW,0BAAUe,MAAOvB,EAASwB,SApCf,SAACC,GAC1BxB,EAAWwB,EAAMC,OAAOH,UAmCrB,+BACA,uBACA,wBAAQI,QAASnB,EAAjB,0BACA,uBACA,wDAAW,0BAAUe,MAAOnB,IAA5B,wBACA,uBACA,mDAAW,0BAAUmB,MAAOjB,IAA5B,kBCzDOsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.61e46a7d.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState} from 'react';\n\nfunction App() {\n\n  const [radius, setRadius] = useState('');\n  const [height, setHeight] = useState('');\n  const [density, setDensity] = useState('');\n  const [length, setLength] = useState('');\n  const [volume, setVolume] = useState('');\n  const [quality,setQuality] = useState('');\n  \n  const handleRadiusChange = (event) => {\n    setRadius(event.target.value);\n    cal();\n  }\n\n  const handleHeightChange = (event) => {\n     setHeight(event.target.value);\n     cal();\n  }\n\n  const handleLengthChange = (event) => {\n     setLength(event.target.value);\n     cal();\n  }\n\n  const handleDensityChange = (event) => {\n     setDensity(event.target.value);\n  }\n\n  const cal = () => {\n    const r = parseFloat(radius,10)/2000;\n    const h = parseFloat(height,10)/1000;\n    const l = parseFloat(length,10)/1000;\n    const d = parseFloat(density,10);\n    if (!isNaN(r) && !isNaN(h) && !isNaN(l) && !isNaN(d) && r > 0 && h > 0 && l > 0 && d > 0) {\n      const area = calArea(r,h);\n      const total_v = area * l;\n      const total_quality = total_v * d;\n      setVolume(total_v);\n      setQuality(total_quality);\n    }\n  }\n\n  const calArea = (r, h) => {\n    const degree = Math.acos((r-h)/r);\n    const totalArea = r * r * degree;\n    const l = Math.tan(degree) * (r - h);\n    const triangleArea = l * (r - h);\n    return totalArea - triangleArea;\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <label>截面直径:<textarea value={radius} onChange={handleRadiusChange} />MM</label>\n        <br></br>\n        <label>油罐长度:<textarea value={length} onChange={handleLengthChange } />MM</label>\n        <br></br>\n        <label>油面高度:<textarea value={height} onChange={handleHeightChange } />MM</label>\n        <br></br>\n        <label>油密度:<textarea value={density} onChange={handleDensityChange} />吨/立方米</label>\n        <br></br>\n        <button onClick={cal}>计算</button>\n        <br></br>\n        <label>油体积:<textarea value={volume} />立方米</label>\n        <br></br>\n        <label> 油量:<textarea value={quality} />吨</label>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
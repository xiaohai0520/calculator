{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","radius","setRadius","height","setHeight","density","setDensity","length","setLength","volume","setVolume","quality","setQuality","cal","r","parseFloat","h","l","d","isNaN","area","calArea","console","log","total_v","total_quality","degree","Math","acos","totalArea","tan","className","value","onChange","event","target","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAgHeA,MA7Gf,WAEE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAA4BR,mBAAS,IAArC,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAA6BV,mBAAS,IAAtC,mBAAOW,EAAP,KAAeC,EAAf,KAqBMC,EAAM,WACV,IAAMC,EAAIC,WAAWd,EAAO,IACtBe,EAAID,WAAWZ,EAAO,IACtBc,EAAIF,WAAWR,EAAO,IACtBW,EAAIH,WAAWV,EAAQ,IAC7B,IAAKc,MAAML,KAAOK,MAAMH,KAAOG,MAAMF,KAAOE,MAAMD,IAAMJ,EAAI,GAAKE,EAAI,GAAKC,EAAI,GAAKC,EAAI,EAAG,CACxF,IAAME,EAAOC,EAAQP,EAAEE,GACvBM,QAAQC,IAAI,OAAQH,GACpB,IAAMI,EAAUJ,EAAOH,EACjBQ,EAAgBD,EAAUN,EAChCR,EAAUc,GACVZ,EAAWa,KAITJ,EAAU,SAACP,EAAGE,GAClB,IAAMU,EAASC,KAAKC,MAAMd,EAAEE,GAAGF,GACzBe,EAAYf,EAAIA,EAAIY,EAAS,EAInC,OAHAJ,QAAQC,IAAI,YAAYM,GAGjBA,EAFGF,KAAKG,IAAIJ,IAAWZ,EAAIE,IACRF,EAAIE,IAKhC,OACE,qBAAKe,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACA,8DAEE,0BAAUC,MAAO/B,EAAQgC,SAjDJ,SAACC,GAC1BhC,EAAUgC,EAAMC,OAAOH,OACvBnB,OA6CE,YAMA,uBAEA,8DAEE,0BAAUmB,MAAO7B,EAAQ8B,SApDJ,SAACC,GACzB9B,EAAU8B,EAAMC,OAAOH,OACvBnB,OAgDC,YAMA,uBAEA,8DAEE,0BAAUmB,MAAOzB,EAAQ0B,SAvDJ,SAACC,GACzB1B,EAAU0B,EAAMC,OAAOH,OACvBnB,OAmDC,YAMA,uBAEA,wDAEE,0BAAUmB,MAAO3B,EAAS4B,SA1DJ,SAACC,GAC1B5B,EAAW4B,EAAMC,OAAOH,UAuDvB,+BAMA,uBACA,wBAAQI,QAASvB,EAAjB,0BACA,uBAEA,wDAEE,0BAAUmB,MAAOvB,IAFnB,wBAMA,uBAEA,kDAEE,0BAAUuB,MAAOrB,IAFnB,kBCzFS0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.34df3bdc.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState} from 'react';\n\nfunction App() {\n\n  const [radius, setRadius] = useState('');\n  const [height, setHeight] = useState('');\n  const [density, setDensity] = useState('');\n  const [length, setLength] = useState('');\n  const [volume, setVolume] = useState('');\n  const [quality,setQuality] = useState('');\n  \n  const handleRadiusChange = (event) => {\n    setRadius(event.target.value);\n    cal();\n  }\n\n  const handleHeightChange = (event) => {\n     setHeight(event.target.value);\n     cal();\n  }\n\n  const handleLengthChange = (event) => {\n     setLength(event.target.value);\n     cal();\n  }\n\n  const handleDensityChange = (event) => {\n     setDensity(event.target.value);\n  }\n\n  const cal = () => {\n    const r = parseFloat(radius,10);\n    const h = parseFloat(height,10);\n    const l = parseFloat(length,10);\n    const d = parseFloat(density,10);\n    if (!isNaN(r) && !isNaN(h) && !isNaN(l) && !isNaN(d) && r > 0 && h > 0 && l > 0 && d > 0) {\n      const area = calArea(r,h);\n      console.log('area', area);\n      const total_v = area * l;\n      const total_quality = total_v * d;\n      setVolume(total_v);\n      setQuality(total_quality);\n    }\n  }\n\n  const calArea = (r, h) => {\n    const degree = Math.acos((r-h)/r);\n    const totalArea = r * r * degree * 2;\n    console.log('totalArea',totalArea);\n    const l = Math.tan(degree) * (r - h);\n    const triangleArea = l * (r - h);\n    return totalArea - triangleArea;\n  }\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <label>\n      截面半径:\n        <textarea value={radius} onChange={handleRadiusChange} />\n      米\n      </label>\n\n      <br></br>\n\n      <label>\n      油面高度:\n        <textarea value={height} onChange={handleHeightChange } />\n      米\n      </label>\n\n      <br></br>\n\n      <label>\n      油管长度:\n        <textarea value={length} onChange={handleLengthChange } />\n      米\n      </label>\n\n      <br></br>\n\n      <label>\n      油密度:\n        <textarea value={density} onChange={handleDensityChange} />\n      吨/立方米\n      </label>\n\n      <br></br>\n      <button onClick={cal}>计算</button>\n      <br></br>\n\n      <label>\n      油体积:\n        <textarea value={volume} />\n      立方米\n      </label>\n\n      <br></br>\n\n      <label>\n      油量:\n        <textarea value={quality} />\n      吨\n      </label>\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}